Goto Root user
sudo -i
-----------------
Set up repository
sudo apt-get update
sudo apt-get install \
apt-transport-https \
ca-certificates \
curl \
gnupg-agent \
software-properties-common

-------------------------
Add Docker's Official GPG Key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
stable"
---------------

Install Docker Engine
 sudo apt-get install docker-ce docker-ce-cli containerd.io
----------------
Check Status of Docker
systemctl status docker
--------------------
connect to docker
docker images
(Only root user can communicate)
(need to add other user in docker group)
sudo usermod -aG docker ubuntu
id ubuntu (Check ubuntu user in docker group)
----------------------------
restart and check docker images command
-----------------------------------------
run sample images
docker run hello-world
---------------------
docker ps
docker ps -a (show dead container)
-------------------------------
Step 2: Launch one manager node and 3 worker nodes 
Step 3: -Check the status of docker swarm, basically it should be inactive 
Cmd: #docker info 
Step 4: - After checking the status initialize the docker swarm
Cmd: - #docker swarm init 
Step 5:  Check the docker swarm status, it should be active 
Cmd: #docker info 
Step 6: Add the worker token to every worker node to join swarm manager
Cmd: docker swarm join-token worker
Step 7: Now make directory of any name and make file of app.py, Dockerfile, dockerswarm.yml, and requirements.txt
Cmd: docker build -t server:latest .
Step 9: Check the image by listing it 
Cmd: docker images
Step 9: Tagging the image to docker hub 
Cmd: Docker tag server:latest(image name and its tag) divyapujari/server:latest (dockerhub repo name and imagetag)
Step 10: Login to the docker hub
Step 11: Push the image to the docker hub 
Cmd: docker push divyapujari/server:latest 
Step 12: List images
Cmd: docker images
Step 13: Deploy the docker stack through yaml file
Cmd: docker stack deploy -c dockerswarm.yml server
Step 14: List the services 
Cmd: docker services ls
--outpu---